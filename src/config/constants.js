// Use native Object.freeze instead of importing from @endo/eventual-send
const CONSTANTS = Object.freeze({
  HTTP_STATUS: {
    SUCCESSFUL: 200,
    CREATED: 201,
    BAD_REQUEST: 400,
    UNAUTHORIZED: 401,
    FORBIDDEN: 403,
    NOT_FOUND: 404,
    INTERNAL_SERVER_ERROR: 500,
    TOO_MANY_REQUESTS: 429,
  },
  MESSAGES: {
    NO_TOKEN: 'Please add authentication token',
    UNAUTHORIZED: 'Invalid credentials, please use correct email & password combination',
    OLD_PASSWORD: 'Please enter a valid old password',
    REGISTER: 'Registered successfully',
    LOGIN: 'Logged in successfully',
    LOGOUT: 'Logged out successfully',
    NOT_FOUND: 'Not found',
    FORGOT_PASSWORD: 'Reset password link sent successfully to your email address',
    CHANGE_PASSWORD: 'Password changed successfully',
    ADMIN_NOT_FOUND: 'Admin not found',
    ADMIN_DETAILS: 'Admin details',
    ADMIN_STATUS_DELETE: 'Admin deleted successfully',
    ADMIN_EMAIL_ALREADY_EXISTS: 'The admin email already exists. Please use a different email',
    ADMIN_UPDATE: 'Admin information updated successfully',
    ADMIN_CREATE: 'Admin created successfully',
    SCHOOL_CREATE: 'School created successfully',
    SCHOOL_NOT_FOUND: 'School not found',
    SUBSCRIPTION_CREATE: 'Subscription created successfully',
    SUBSCRIPTION_NOT_FOUND: 'Subscription not found',
    SYSTEM_SETTINGS_NOT_FOUND: 'System settings not found',
    SYSTEM_SETTINGS_ALREADY_EXISTS: 'System settings already exist',
    SYSTEM_SETTINGS_CREATED: 'System settings created successfully',
    SYSTEM_SETTINGS_UPDATED: 'System settings updated successfully',
    SYSTEM_SETTINGS_RETRIEVED: 'System settings retrieved successfully',
    ROLE_ALREADY_EXISTS: 'Role already exists',
    ROLE_NOT_FOUND: 'Role not found',
    PERMISSION_DENIED: 'Permission denied',
  },
  ROLES: {
    SUPER_ADMIN: 'superadmin',
    SCHOOL_ADMIN: 'admin',
    TEACHER: 'teacher',
    STUDENT: 'student',
  },
  PERMISSIONS: {
    MANAGE_SCHOOLS: 'manage_schools',
    MANAGE_ADMINS: 'manage_admins',
    VIEW_REPORTS: 'view_reports',
    MANAGE_USERS: 'manage_users',
    MANAGE_SUBSCRIPTIONS: 'manage_subscriptions',
    UPDATE_PROFILE: 'update_profile',
    CHANGE_PASSWORD: 'change_password',
    MANAGE_ROLES: 'manage_roles',
  },

  PERMISSIONS: [
    'roles:read',
    'roles:write',
    'flags:read',
    'flags:write',
    'manageAdmins',
    'getAdmins',
    'updateProfile',
    'changePassword',
    'manageRoles',
  ],

  SUBSCRIPTION_PLANS: {
    BASIC: 'basic',
    PREMIUM: 'premium',
    ENTERPRISE: 'enterprise',
  },
  SUBSCRIPTION_STATUS: {
    ACTIVE: 'active',
    EXPIRED: 'expired',
    CANCELLED: 'cancelled',
  },

  OPERATIONAL_MODES: ['production', 'staging', 'development'],
  TIME_ZONES: ['UTC', 'Asia/Kolkata', 'America/New_York', 'Europe/London', 'Asia/Shanghai'],
  CLOUD_PROVIDERS: ['AWS', 'Azure', 'Google Cloud', 'Hybrid'],
  DATA_CENTER_REGIONS: ['Mumbai', 'Singapore', 'Frankfurt', 'US-East-1', 'Sydney', 'Tokyo', 'London', 'Sao Paulo'],
  FAILOVER_STRATEGIES: ['Manual', 'Automatic', 'Custom'],
  IN_MEMORY_ENGINES: ['SAP HANA', 'Redis Enterprise'],
  DATABASE_ENGINES: ['Cassandra', 'PostgreSQL', 'MongoDB'],
  BACKUP_MODES: ['Real-time', 'Incremental'],
  STORAGE_TYPES: ['Local', 'Cloud', 'Tape'],
  DR_SITES: ['AWS US-East-1', 'AWS Mumbai', 'Azure Singapore', 'Google Cloud Tokyo'],


});

export default CONSTANTS;